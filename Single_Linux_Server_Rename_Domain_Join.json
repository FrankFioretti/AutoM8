{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Launches a new AmazonLinux2, CentOS7, or RedHat7 EC2 instance",

  "Parameters" : {

    "InstanceType" : {
      "Description" : "Server EC2 instance type (See here for more details: https://aws.amazon.com/ec2/instance-types/)",
      "Type" : "String",
      "Default" : "t2.small",
      "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    
    "ServerName" : {
        "Description" : "Enter the desired name of the new instance",
        "Type" : "String"
        
    },

    "User" : {
        "Description" : "Enter your FQDN (FLast@Domain.com)",
        "Type" : "String"
        
    },

    "Group" : {
      "Description" : "Enter the FQDN of an AD Group that will own this server (Group@Domain.com)",
      "Type" : "String"
      
  },

    "SubnetAZ" : {
        "Description" : "Select the subnet/AZ for the new server",
        "Type" : "String",
        "Default" : "SubnetA",
        "AllowedValues" : [ "SubnetA", "SubnetB"]
        
      },

    "Practice" : {
        "Description" : "Server Role",
        "Type" : "String",
        "Default" : "Dev",
        "AllowedValues" : [ "Dev", "Test", "Prod"]
        
      },

      "Backup" : {
        "Description" : "Select if you would like this server to be automatically backed up once per day or not",
        "Type" : "String",
        "Default" : "Auto",
        "AllowedValues" : [ "Auto", "None"]
        
      },

    "OSVersion" : {
        "Description" : "Select the Operating System",
        "Type" : "String",
        "Default" : "AmazonLinux2",
        "AllowedValues" : [ "CentOS7", "RedHat7", "AmazonLinux2"]
        
      }


  },

  "Mappings" : {

    "SubnetDG" : {
        "us-west-2" : {
        "SubnetA" : "10.0.0.1",
        "SubnetB" : "10.0.1.1"
        }
    },

    "OSVersion" : {
        "us-west-2" : {
        "CentOS7" : "ami-XXXXXXXX",
        "RedHat7" : "ami-XXXXXXXY",
        "AmazonLinux2" : "ami-XXXXXXYY"
        }
    },

    "SubnetAZ" : {
        "us-west-2" : {
        "SubnetA" : "subnet-XXXXXXXX",
        "SubnetB" : "subnet-YYYYYYYY"
        }
    },


    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.nano"     : { "Arch" : "HVM64"  },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "t2.large"    : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.large"    : { "Arch" : "HVM64"  },
      "m4.xlarge"   : { "Arch" : "HVM64"  },
      "m4.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.4xlarge"  : { "Arch" : "HVM64"  },
      "m4.10xlarge" : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "c4.large"    : { "Arch" : "HVM64"  },
      "c4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.2xlarge"  : { "Arch" : "HVM64"  },
      "c4.4xlarge"  : { "Arch" : "HVM64"  },
      "c4.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "g2.8xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "d2.xlarge"   : { "Arch" : "HVM64"  },
      "d2.2xlarge"  : { "Arch" : "HVM64"  },
      "d2.4xlarge"  : { "Arch" : "HVM64"  },
      "d2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },

    "AWSInstanceType2NATArch" : {
      "t1.micro"    : { "Arch" : "NATPV64"   },
      "t2.nano"     : { "Arch" : "NATHVM64"  },
      "t2.micro"    : { "Arch" : "NATHVM64"  },
      "t2.small"    : { "Arch" : "NATHVM64"  },
      "t2.medium"   : { "Arch" : "NATHVM64"  },
      "t2.large"    : { "Arch" : "NATHVM64"  },
      "m1.small"    : { "Arch" : "NATPV64"   },
      "m1.medium"   : { "Arch" : "NATPV64"   },
      "m1.large"    : { "Arch" : "NATPV64"   },
      "m1.xlarge"   : { "Arch" : "NATPV64"   },
      "m2.xlarge"   : { "Arch" : "NATPV64"   },
      "m2.2xlarge"  : { "Arch" : "NATPV64"   },
      "m2.4xlarge"  : { "Arch" : "NATPV64"   },
      "m3.medium"   : { "Arch" : "NATHVM64"  },
      "m3.large"    : { "Arch" : "NATHVM64"  },
      "m3.xlarge"   : { "Arch" : "NATHVM64"  },
      "m3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.large"    : { "Arch" : "NATHVM64"  },
      "m4.xlarge"   : { "Arch" : "NATHVM64"  },
      "m4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.10xlarge" : { "Arch" : "NATHVM64"  },
      "c1.medium"   : { "Arch" : "NATPV64"   },
      "c1.xlarge"   : { "Arch" : "NATPV64"   },
      "c3.large"    : { "Arch" : "NATHVM64"  },
      "c3.xlarge"   : { "Arch" : "NATHVM64"  },
      "c3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.large"    : { "Arch" : "NATHVM64"  },
      "c4.xlarge"   : { "Arch" : "NATHVM64"  },
      "c4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.8xlarge"  : { "Arch" : "NATHVM64"  },
      "g2.2xlarge"  : { "Arch" : "NATHVMG2"  },
      "g2.8xlarge"  : { "Arch" : "NATHVMG2"  },
      "r3.large"    : { "Arch" : "NATHVM64"  },
      "r3.xlarge"   : { "Arch" : "NATHVM64"  },
      "r3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.xlarge"   : { "Arch" : "NATHVM64"  },
      "i2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.xlarge"   : { "Arch" : "NATHVM64"  },
      "d2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "hi1.4xlarge" : { "Arch" : "NATHVM64"  },
      "hs1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cr1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cc2.8xlarge" : { "Arch" : "NATHVM64"  }
    }
,
    "AWSRegionArch2AMI" : {
      "us-east-1"        : {"PV64" : "ami-2a69aa47", "HVM64" : "ami-97785bed", "HVMG2" : "ami-0a6e3770"},
      "us-west-2"        : {"PV64" : "ami-7f77b31f", "HVM64" : "ami-f2d3638a", "HVMG2" : "ami-ee15a196"},
      "us-west-1"        : {"PV64" : "ami-a2490dc2", "HVM64" : "ami-824c4ee2", "HVMG2" : "ami-0da4a46d"},
      "eu-west-1"        : {"PV64" : "ami-4cdd453f", "HVM64" : "ami-d834aba1", "HVMG2" : "ami-af8013d6"},
      "eu-west-2"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-403e2524", "HVMG2" : "NOT_SUPPORTED"},
      "eu-west-3"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-8ee056f3", "HVMG2" : "NOT_SUPPORTED"},
      "eu-central-1"     : {"PV64" : "ami-6527cf0a", "HVM64" : "ami-5652ce39", "HVMG2" : "ami-1d58ca72"},
      "ap-northeast-1"   : {"PV64" : "ami-3e42b65f", "HVM64" : "ami-ceafcba8", "HVMG2" : "ami-edfd658b"},
      "ap-northeast-2"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-863090e8", "HVMG2" : "NOT_SUPPORTED"},
      "ap-northeast-3"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-83444afe", "HVMG2" : "NOT_SUPPORTED"},
      "ap-southeast-1"   : {"PV64" : "ami-df9e4cbc", "HVM64" : "ami-68097514", "HVMG2" : "ami-c06013bc"},
      "ap-southeast-2"   : {"PV64" : "ami-63351d00", "HVM64" : "ami-942dd1f6", "HVMG2" : "ami-85ef12e7"},
      "ap-south-1"       : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-531a4c3c", "HVMG2" : "ami-411e492e"},
      "us-east-2"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-f63b1193", "HVMG2" : "NOT_SUPPORTED"},
      "ca-central-1"     : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-a954d1cd", "HVMG2" : "NOT_SUPPORTED"},
      "sa-east-1"        : {"PV64" : "ami-1ad34676", "HVM64" : "ami-84175ae8", "HVMG2" : "NOT_SUPPORTED"},
      "cn-north-1"       : {"PV64" : "ami-77559f1a", "HVM64" : "ami-cb19c4a6", "HVMG2" : "NOT_SUPPORTED"},
      "cn-northwest-1"   : {"PV64" : "ami-80707be2", "HVM64" : "ami-3e60745c", "HVMG2" : "NOT_SUPPORTED"}
    }

  },

  "Resources" : {

    "NewENI" : {
        "Type" : "AWS::EC2::NetworkInterface",
        "Properties" : {
            "GroupSet" : [ "sg-XXXXXXXX" ],
            "SubnetId" : { "Fn::FindInMap" : [ "SubnetAZ", { "Ref" : "AWS::Region" }, { "Ref" : "SubnetAZ" } ]},
            "Tags" : [ {
                "Key" : "Name",
                "Value" : {"Ref" : "ServerName"}
              },
              {
                "Key" : "Practice",
                "Value" : {"Ref" : "Practice"}
              },
              {
                "Key" : "Patch Group",
                "Value" : "Base"
              }, 
              {
                "Key" : "Backup",
                "Value" : {"Ref" : "Backup"}
              }]
        }
     },

    "EC2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : { "Ref" : "InstanceType" },
        "NetworkInterfaces" : [ {
            "NetworkInterfaceId" : {"Ref" : "NewENI"}, "DeviceIndex" : "0" } ],
        "ImageId" : { "Fn::FindInMap" : [ "OSVersion", { "Ref" : "AWS::Region" }, { "Ref" : "OSVersion" } ]},
        "IamInstanceProfile" : "LinuxDJ",
        "Tags" : [ {
          "Key" : "Name",
          "Value" : {"Ref" : "ServerName"}
        },
        {
            "Key" : "OS Type",
            "Value" : "Linux"
          },
        {
          "Key" : "Practice",
          "Value" : {"Ref" : "Practice"}
        },
        {
          "Key" : "Patch Group",
          "Value" : "Base"
        },
        {
            "Key" : "Backup",
            "Value" : {"Ref" : "Backup"}
        }
      ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/usr/bin/bash\n",
 
                "whoami >> ~/whoami.txt\n",
                "sudo rm -f /root/sysprep.sh\n",

                "sudo yum update -y --skip-broken\n",

                "OLD_HOSTNAME=\"$( hostname )\"\n",
                "NEW_HOSTNAME=",{"Ref": "ServerName"},"\n",

                "sudo echo Changing hostname from $OLD_HOSTNAME to $NEW_HOSTNAME...\n",

                "sudo hostname \"$NEW_HOSTNAME\"\n",

                "sudo sed -i \"s\/HOSTNAME=.*\/HOSTNAME=$NEW_HOSTNAME\/g\" /etc/sysconfig/network\n",

                "if [ -n \"$( grep \"$OLD_HOSTNAME\" \/etc\/hosts )\" ]; then\n",
                "sudo sed -i \"s\/$OLD_HOSTNAME\/$NEW_HOSTNAME\/g\" /etc/hosts\n",
                "else\n",
                "sudo echo -e \"$( hostname -I | awk '{ print $1 }' )\\t$NEW_HOSTNAME\" | sudo tee --append /etc/hosts\n",
                "fi\n",

                "owneremail;=",{"Ref": "User"},"\n",
                "adgroup=",{"Ref": "Group"},"\n",
                "creds=$(aws secretsmanager get-secret-value --secret-id linuxdj --region us-west-2 | python -c \"import sys, json; print(json.load(sys.stdin)['SecretString'])\")\n",
                "user=\"$(cut -d',' -f1 <<< $creds)\"\n",
                "pw=\"$(cut -d',' -f2 <<< $creds)\"\n",
                "owner=\"$(cut -d'@' -f1 <<< $owneremail)\"\n",

                "sudo echo $pw| sudo kinit $user\n",
                "sudo realm join -v DOMAIN.COM --computer-ou=\"OU=servers,DC=domain,DC=com\"\n",

                "sudo authconfig --enablesssd --enablesssdauth --enablemkhomedir --update\n",

                "echo \"simple_allow_groups = $adgroup\" | sudo tee --append /etc/sssd/sssd.conf\n",
                "echo \"simple_allow_users = $owneremail\" | sudo tee --append /etc/sssd/sssd.conf\n",

                "sudo systemctl restart sshd.service\n",
                "sudo systemctl restart sssd.service\n",

                "sudo sed -i \"106i \\\"%$adgroup\\\" ALL=(ALL)\\tALL\" /etc/sudoers\n",
                "sudo usermod -a -G wheel $owneremail\n",

                "sudo systemctl restart sshd.service\n",
                "sudo systemctl restart sssd.service\n",

                "sudo usermod -p ! root\n",

                "sudo rm -f /scripts/*\n",
                "sudo rm -f /root/.bash_history\n",
                "history -c\n",

                "instanceid=$(curl http://169.254.169.254/latest/meta-data/instance-id/)\n",
                "iip=$(aws ec2 describe-iam-instance-profile-associations --filters Name='instance-id',Values=\"$instanceid\" --region us-west-2 | grep iip* | cut -d':' -f2 | cut -d',' -f1)\n",
                "associationid=$(sed -e 's\/^\"\/\/' -e 's\/\"$\/\/' <<< $iip)\n",
                "aws ec2 disassociate-iam-instance-profile --association-id $associationid --region us-west-2\n",

                "/usr/bin/cfn-signal -s true --stack ", { "Ref": "AWS::StackId" }," --region ", { "Ref": "AWS::Region" }," ", { "Fn::Sub": [ "\"${URL}\"", { "URL": {"Ref" : "FinalWaitHandle" }} ]},"\n"
                
              ]
            ]
          }
        }
      }
    },
    "FinalWaitHandle": {
        "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
        
    "FinalWaitCondition": {
        "Type": "AWS::CloudFormation::WaitCondition",
        "DependsOn": "EC2Instance",
        "Properties": {
            "Handle": { "Ref": "FinalWaitHandle" },
            "Count": "1",
            "Timeout": "600"
          }  
        }
    },

  "Outputs" : {
    "InstanceId" : {
      "Description" : "InstanceId of the newly created EC2 instance",
      "Value" : { "Ref" : "EC2Instance" }
    },
    "AZ" : {
      "Description" : "Availability Zone of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "EC2Instance", "AvailabilityZone" ] }
    },
    "PrivateIP" : {
      "Description" : "Private IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "EC2Instance", "PrivateIp" ] }
    },
    "ServerName" : {
      "Description" : "Name of the new Server",
      "Value" : { "Ref" : "ServerName" }
    }
  }
}