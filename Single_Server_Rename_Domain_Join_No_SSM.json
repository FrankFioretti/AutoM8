{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Launches a new Windows Server 2012 R2 or 2016 EC2 instance",

  "Parameters" : {

    "InstanceType" : {
      "Description" : "Server EC2 instance type (See here for more details: https://aws.amazon.com/ec2/instance-types/)",
      "Type" : "String",
      "Default" : "t2.small",
      "AllowedValues" : [ "t1.micro", "t2.nano", "t2.micro", "t2.small", "t2.medium", "t2.large", "m1.small", "m1.medium", "m1.large", "m1.xlarge", "m2.xlarge", "m2.2xlarge", "m2.4xlarge", "m3.medium", "m3.large", "m3.xlarge", "m3.2xlarge", "m4.large", "m4.xlarge", "m4.2xlarge", "m4.4xlarge", "m4.10xlarge", "c1.medium", "c1.xlarge", "c3.large", "c3.xlarge", "c3.2xlarge", "c3.4xlarge", "c3.8xlarge", "c4.large", "c4.xlarge", "c4.2xlarge", "c4.4xlarge", "c4.8xlarge", "g2.2xlarge", "g2.8xlarge", "r3.large", "r3.xlarge", "r3.2xlarge", "r3.4xlarge", "r3.8xlarge", "i2.xlarge", "i2.2xlarge", "i2.4xlarge", "i2.8xlarge", "d2.xlarge", "d2.2xlarge", "d2.4xlarge", "d2.8xlarge", "hi1.4xlarge", "hs1.8xlarge", "cr1.8xlarge", "cc2.8xlarge", "cg1.4xlarge"]
,
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    
    "DriveSize": {
      "Type": "Number",
      "Description": "Specify the size of the root volume of the new server, between 50gb and 500gb",
      "MinValue": "50",
      "MaxValue": "500",
      "Default": "50",
      "ConstraintDescription": "The drive must be between 50gb and 500gb"
    },
    "ServerName" : {
        "Description" : "Enter the desired name of the new instance",
        "Type" : "String"
        
    },

    "User" : {
        "Description" : "Enter your FQDN (FLast@Domain.com)",
        "Type" : "String"
        
    },

    "SubnetAZ" : {
        "Description" : "Select the subnet/AZ for the new server",
        "Type" : "String",
        "Default" : "SubnetA",
        "AllowedValues" : [ "SubnetA", "SubnetB", "SubnetC"]
        
      },

    "Practice" : {
        "Description" : "Practice",
        "Type" : "String",
        "Default" : "Dev",
        "AllowedValues" : [ "Dev", "Test", "Prod"]
        
      },

      "Backup" : {
        "Description" : "Select if you would like this server to be automatically backed up once per day or not",
        "Type" : "String",
        "Default" : "Auto",
        "AllowedValues" : [ "Auto", "None"]
        
      },

    "OSVersion" : {
        "Description" : "Select the Operating System",
        "Type" : "String",
        "Default" : "2012R2",
        "AllowedValues" : [ "2012R2", "2016"]
        
      }

    
  },

  "Mappings" : {

    "SubnetDG" : {
        "us-east-2" : {
        "SubnetA" : "10.X.X.1",
        "SubnetB" : "10.X.Y.1",
        "SubnetC" : "10.X.XY.1"
        }
    },

    "OSVersion" : {
        "us-east-2" : {
        "2012R2" : "ami-XXXXXXXX",
        "2016" : "ami-YYYYYYYY"
        }
    },

    "SubnetAZ" : {
        "us-east-2" : {
        "SubnetA" : "subnet-XXXXXXXX",
        "SubnetB" : "subnet-YYYYYYYY",
        "SubnetC" : "subnet-XYXYXYXY"
        }
    },


    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.nano"     : { "Arch" : "HVM64"  },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "t2.large"    : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.large"    : { "Arch" : "HVM64"  },
      "m4.xlarge"   : { "Arch" : "HVM64"  },
      "m4.2xlarge"  : { "Arch" : "HVM64"  },
      "m4.4xlarge"  : { "Arch" : "HVM64"  },
      "m4.10xlarge" : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "c4.large"    : { "Arch" : "HVM64"  },
      "c4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.2xlarge"  : { "Arch" : "HVM64"  },
      "c4.4xlarge"  : { "Arch" : "HVM64"  },
      "c4.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "g2.8xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "d2.xlarge"   : { "Arch" : "HVM64"  },
      "d2.2xlarge"  : { "Arch" : "HVM64"  },
      "d2.4xlarge"  : { "Arch" : "HVM64"  },
      "d2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },

    "AWSInstanceType2NATArch" : {
      "t1.micro"    : { "Arch" : "NATPV64"   },
      "t2.nano"     : { "Arch" : "NATHVM64"  },
      "t2.micro"    : { "Arch" : "NATHVM64"  },
      "t2.small"    : { "Arch" : "NATHVM64"  },
      "t2.medium"   : { "Arch" : "NATHVM64"  },
      "t2.large"    : { "Arch" : "NATHVM64"  },
      "m1.small"    : { "Arch" : "NATPV64"   },
      "m1.medium"   : { "Arch" : "NATPV64"   },
      "m1.large"    : { "Arch" : "NATPV64"   },
      "m1.xlarge"   : { "Arch" : "NATPV64"   },
      "m2.xlarge"   : { "Arch" : "NATPV64"   },
      "m2.2xlarge"  : { "Arch" : "NATPV64"   },
      "m2.4xlarge"  : { "Arch" : "NATPV64"   },
      "m3.medium"   : { "Arch" : "NATHVM64"  },
      "m3.large"    : { "Arch" : "NATHVM64"  },
      "m3.xlarge"   : { "Arch" : "NATHVM64"  },
      "m3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.large"    : { "Arch" : "NATHVM64"  },
      "m4.xlarge"   : { "Arch" : "NATHVM64"  },
      "m4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "m4.10xlarge" : { "Arch" : "NATHVM64"  },
      "c1.medium"   : { "Arch" : "NATPV64"   },
      "c1.xlarge"   : { "Arch" : "NATPV64"   },
      "c3.large"    : { "Arch" : "NATHVM64"  },
      "c3.xlarge"   : { "Arch" : "NATHVM64"  },
      "c3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.large"    : { "Arch" : "NATHVM64"  },
      "c4.xlarge"   : { "Arch" : "NATHVM64"  },
      "c4.2xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.4xlarge"  : { "Arch" : "NATHVM64"  },
      "c4.8xlarge"  : { "Arch" : "NATHVM64"  },
      "g2.2xlarge"  : { "Arch" : "NATHVMG2"  },
      "g2.8xlarge"  : { "Arch" : "NATHVMG2"  },
      "r3.large"    : { "Arch" : "NATHVM64"  },
      "r3.xlarge"   : { "Arch" : "NATHVM64"  },
      "r3.2xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.4xlarge"  : { "Arch" : "NATHVM64"  },
      "r3.8xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.xlarge"   : { "Arch" : "NATHVM64"  },
      "i2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "i2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.xlarge"   : { "Arch" : "NATHVM64"  },
      "d2.2xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.4xlarge"  : { "Arch" : "NATHVM64"  },
      "d2.8xlarge"  : { "Arch" : "NATHVM64"  },
      "hi1.4xlarge" : { "Arch" : "NATHVM64"  },
      "hs1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cr1.8xlarge" : { "Arch" : "NATHVM64"  },
      "cc2.8xlarge" : { "Arch" : "NATHVM64"  }
    }
,
    "AWSRegionArch2AMI" : {
      "us-east-1"        : {"PV64" : "ami-2a69aa47", "HVM64" : "ami-97785bed", "HVMG2" : "ami-0a6e3770"},
      "us-west-2"        : {"PV64" : "ami-7f77b31f", "HVM64" : "ami-f2d3638a", "HVMG2" : "ami-ee15a196"},
      "us-west-1"        : {"PV64" : "ami-a2490dc2", "HVM64" : "ami-824c4ee2", "HVMG2" : "ami-0da4a46d"},
      "eu-west-1"        : {"PV64" : "ami-4cdd453f", "HVM64" : "ami-d834aba1", "HVMG2" : "ami-af8013d6"},
      "eu-west-2"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-403e2524", "HVMG2" : "NOT_SUPPORTED"},
      "eu-west-3"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-8ee056f3", "HVMG2" : "NOT_SUPPORTED"},
      "eu-central-1"     : {"PV64" : "ami-6527cf0a", "HVM64" : "ami-5652ce39", "HVMG2" : "ami-1d58ca72"},
      "ap-northeast-1"   : {"PV64" : "ami-3e42b65f", "HVM64" : "ami-ceafcba8", "HVMG2" : "ami-edfd658b"},
      "ap-northeast-2"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-863090e8", "HVMG2" : "NOT_SUPPORTED"},
      "ap-northeast-3"   : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-83444afe", "HVMG2" : "NOT_SUPPORTED"},
      "ap-southeast-1"   : {"PV64" : "ami-df9e4cbc", "HVM64" : "ami-68097514", "HVMG2" : "ami-c06013bc"},
      "ap-southeast-2"   : {"PV64" : "ami-63351d00", "HVM64" : "ami-942dd1f6", "HVMG2" : "ami-85ef12e7"},
      "ap-south-1"       : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-531a4c3c", "HVMG2" : "ami-411e492e"},
      "us-east-2"        : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-f63b1193", "HVMG2" : "NOT_SUPPORTED"},
      "ca-central-1"     : {"PV64" : "NOT_SUPPORTED", "HVM64" : "ami-a954d1cd", "HVMG2" : "NOT_SUPPORTED"},
      "sa-east-1"        : {"PV64" : "ami-1ad34676", "HVM64" : "ami-84175ae8", "HVMG2" : "NOT_SUPPORTED"},
      "cn-north-1"       : {"PV64" : "ami-77559f1a", "HVM64" : "ami-cb19c4a6", "HVMG2" : "NOT_SUPPORTED"},
      "cn-northwest-1"   : {"PV64" : "ami-80707be2", "HVM64" : "ami-3e60745c", "HVMG2" : "NOT_SUPPORTED"}
    }

  },

  "Resources" : {

    "NewENI" : {
        "Type" : "AWS::EC2::NetworkInterface",
        "Properties" : {
            "GroupSet" : [ "sg-XXXXXXXX" ],
            "SubnetId" : { "Fn::FindInMap" : [ "SubnetAZ", { "Ref" : "AWS::Region" }, { "Ref" : "SubnetAZ" } ]},
            "Tags" : [ {
                "Key" : "Name",
                "Value" : {"Ref" : "ServerName"}
              },
              {
                "Key" : "Practice",
                "Value" : {"Ref" : "Practice"}
              },
              {
                "Key" : "Patch Group",
                "Value" : "Base"
              }, 
              {
                "Key" : "Backup",
                "Value" : {"Ref" : "Backup"}
              }]
        }
     },

    "EC2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "InstanceType" : { "Ref" : "InstanceType" },
        "NetworkInterfaces" : [ {
            "NetworkInterfaceId" : {"Ref" : "NewENI"}, "DeviceIndex" : "0" } ],
        "ImageId" : { "Fn::FindInMap" : [ "OSVersion", { "Ref" : "AWS::Region" }, { "Ref" : "OSVersion" } ]},
        "IamInstanceProfile" : "LinuxDJ",
        "BlockDeviceMappings" : [
          {
             "DeviceName" : "/dev/sda1",
             "Ebs" : { 
              "VolumeSize" : {"Ref" : "DriveSize"},
              "VolumeType" : "gp2"
            }
          }
        ],
        "Tags" : [ {
          "Key" : "Name",
          "Value" : {"Ref" : "ServerName"}
        },
        {
          "Key" : "Practice",
          "Value" : {"Ref" : "Practice"}
        },
        {
          "Key" : "Patch Group",
          "Value" : "Base"
        },
        {
            "Key" : "Backup",
            "Value" : {"Ref" : "Backup"}
        }
      ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<powershell>\n",
                "'net localgroup administrators ",{ "Ref" : "User" }," /add' >> 'C:\\Program Files\\Amazon\\Ec2ConfigService\\Scripts\\Add_Admin.ps1'\n",
                "'cfn-signal.exe -s true --stack ", { "Ref": "AWS::StackId" }," --region ", { "Ref": "AWS::Region" }," ", { "Fn::Sub": [ "\"${URL}\"", { "URL": {"Ref" : "FinalWaitHandle" }} ]}, "' >> 'C:\\Program Files\\Amazon\\Ec2ConfigService\\Scripts\\Signal_Complete.ps1' \n",
                "Import-Module AWSPowerShell\n",
                "$creds=(Get-SECSecretValue -SecretId linuxdj -region us-west-2).secretstring\n",
                "$user=$creds.split(\",\")[0]\n",
                "$pw=$creds.split(\",\")[1]\n",
                "$secpasswd = ConvertTo-SecureString \"$pw\" -AsPlainText -Force\n",
                "$pscredential = New-Object System.Management.Automation.PSCredential (\"$user\", $secpasswd)\n",
                "Add-Computer -DomainName Domain.com -Credential $pscredential -NewName ",{ "Ref" : "ServerName" }," -OUPath \"OU=AWS,OU=servers,DC=domain,DC=com\" -Force\n",
                "$region=\"us-east-2\"\n",
                "$instanceid=Invoke-RestMethod -uri http://169.254.169.254/latest/meta-data/instance-id\n",
                "$associationid=(Get-EC2IamInstanceProfileAssociation -Filter @( @{name='instance-id'; values=\"$instanceid\"} ) -Region $region).associationid\n",
                "aws ec2 disassociate-iam-instance-profile --association-id $associationid --region $region\n",
                "cfn-signal.exe -s true --stack ", { "Ref": "AWS::StackId" }," --region ", { "Ref": "AWS::Region" }," '", { "Ref": "WindowsServerWaitHandle" },"'  \n",
                "Restart-Computer -Force\n",
                "</powershell>\n"  
              ]
            ]
          }
        }
      }
    },
    "WindowsServerWaitHandle": {
        "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
    "FinalWaitHandle": {
        "Type": "AWS::CloudFormation::WaitConditionHandle"
        },
      "WindowsServerWaitCondition": {
        "Type": "AWS::CloudFormation::WaitCondition",
        "DependsOn": "EC2Instance",
        "Properties": {
            "Handle": { "Ref": "WindowsServerWaitHandle" },
            "Count": "1",
            "Timeout": "1200"
        }

    },

      "FinalWaitCondition": {
        "Type": "AWS::CloudFormation::WaitCondition",
        "DependsOn": "EC2Instance",
        "Properties": {
            "Handle": { "Ref": "FinalWaitHandle" },
            "Count": "1",
            "Timeout": "1200"
      }

  }
  

  },
  "Outputs" : {
    "InstanceId" : {
      "Description" : "InstanceId of the newly created EC2 instance",
      "Value" : { "Ref" : "EC2Instance" }
    },
    "AZ" : {
      "Description" : "Availability Zone of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "EC2Instance", "AvailabilityZone" ] }
    },
    "PrivateIP" : {
      "Description" : "Private IP address of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "EC2Instance", "PrivateIp" ] }
    },
    "ServerName" : {
      "Description" : "Name of the new Server",
      "Value" : { "Ref" : "ServerName" }
    }
  }
}